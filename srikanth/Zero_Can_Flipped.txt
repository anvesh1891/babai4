
class Test
{
	
	static void findZeroes(int arr[] , int m)
	{
	    int left = 0, right = 0;
	    int currentBestLength = 0;
	    int currentBestStart = 0;
	    int zeroCount =0;
	    
	    while (right < arr.length) 
	    {
	       if (zeroCount <=m) { 
	       if (arr[right] == 0) {
	         zeroCount++;
	       }
	       right++;
	       }
	       
	       if (zeroCount > m) {
	           if (arr[left] == 0) {
	               zeroCount--;
	           }
	           left++;
	       }
	       
	       if (right-left > currentBestLength) {
	          currentBestLength = right-left;
	          currentBestStart = left;
	       }
	    }
	    System.out.println("current best :" +currentBestLength);
	    System.out.println("current best left : "+currentBestStart);
	     
	    for (int i =0; i<currentBestLength; i++ ) {
	        System.out.println(i);
	    } 
	}
	
	public static void main(String[] args) 
	{
	    int arr[] = new int[]{1, 0, 0, 1, 1, 0, 1, 0, 1, 1}; 
		int m = 2;
		findZeroes(arr, m);
	}
}

class Test
{
	
	static void findZeroes(int arr[] , int m)
	{
	    int left = 0, right = 0;
	    int currentBestLength = 0;
	    int currentBestStart = 0;
	    int zeroCount =0;
	    
	    while (right < arr.length) 
	    {
	       if (zeroCount <=m) { 
	       if (arr[right] == 0) {
	         zeroCount++;
	       }
	       right++;
	       }
	       
	       if (zeroCount > m) {
	           if (arr[left] == 0) {
	               zeroCount--;
	           }
	           left++;
	       }
	       
	       if (right-left > currentBestLength) {
	          currentBestLength = right-left;
	          currentBestStart = left;
	       }
	    }
	    System.out.println("current best :" +currentBestLength);
	    System.out.println("current best left : "+currentBestStart);
	     
	    for (int i =0; i<currentBestLength; i++ ) {
	        System.out.println(i);
	    } 
	}
	
	public static void main(String[] args) 
	{
	    int arr[] = new int[]{1, 0, 0, 1, 1, 0, 1, 0, 1, 1}; 
		int m = 2;
		findZeroes(arr, m);
	}
}
