public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int[] spiralOrder(final int[][] A) {
        
        int top = 0;
        int row = A.length;
        int col = A[0].length;
        int left = 0;
        int direction=0;
        int bottom = row -1;
        int right = col-1;
        int []B = new int[row*col];
        int newRow =0;
        
        
        while (top<=bottom && left <=right)
        {
          if (direction ==0 ) {
              for (int i = left ; i<=right ; i++) {
                  B[newRow++] = A[top][i];
              }
              top++;
              direction =1;
          }
          else if (direction ==1 ) {
              for (int i = top ; i<=bottom ; i++) {
                  B[newRow++] = A[i][right];
              }
              right--;
              direction =2;
          }
          else if (direction ==2 ) {
              for (int i = right ; i >= left; i--) {
                  B[newRow++]= A[bottom][i];
              }
              bottom--;
              direction =3;
          }
          else if (direction ==3 ) {
              for (int i = bottom ; i>= top ; i--) {
                  B[newRow++] = A[i][left];
              }
              left++;
              direction =0;
          }
        }
        return B;
    }
}
                

